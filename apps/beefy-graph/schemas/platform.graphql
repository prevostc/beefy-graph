

########################################################
# Platforms
########################################################

type Platform {
  "${slug}"
  id: ID!
  slug: String!
  name: String!
  description: String!
  socials: Socials!
}

"""
The type of product defines how to interact with the product.
"""
type PlatformProduct {
  "${product.slug}"
  id: ID!
  platform: Platform!
  slug: String!
  name: String!

  products(where: ProductFilter = {}, orderBy: ProductOrderBy = id, orderDirection: OrderDirection = Asc, first: Int = 100, skip: Int = 0): PaginatedProduct!
}


input PlatformFilter {
  slug_eq: String
}
enum PlatformOrderBy {
  id
  slug
  name
}
type PaginatedPlatform {
  pageInfo: PageInfo!
  items: [Platform!]!
}

extend type Query {
  platform(id: ID!): Platform!
  platforms(where: PlatformFilter = {}, orderBy: PlatformOrderBy = id, orderDirection: OrderDirection = Asc, first: Int = 100, skip: Int = 0): PaginatedPlatform!
}