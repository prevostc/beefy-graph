

########################################################
# Points Programs
########################################################

type Points {
    "${slug}"
    id: ID!
    
    partner: Partner!
}

type PointsProgram {
    "${slug}"
    id: ID!
    
    slug: String!
    name: String!
    description: String!
    socials: Socials!

    startTime: DateTime!
    endTime: DateTime!
    
    rewards: [Points!]!

    products(where: ProductFilter = {}, orderBy: ProductOrderBy = id, orderDirection: OrderDirection = Asc, first: Int = 100, skip: Int = 0): PaginatedProduct!
}


input PointsProgramFilter {
    slug_eq: String
}

enum PointsProgramOrderBy {
    id
    slug
    name
}

type PaginatedPointsProgram {
    pageInfo: PageInfo!
    items: [PointsProgram!]!
}

extend type Query {
    pointsProgram(id: ID!): PointsProgram!
    pointsPrograms(where: PointsProgramFilter = {}, orderBy: PointsProgramOrderBy = id, orderDirection: OrderDirection = Asc, first: Int = 100, skip: Int = 0): PaginatedPointsProgram!
}

extend type Product {
    pointsPrograms(where: PointsProgramFilter = {}, orderBy: PointsProgramOrderBy = id, orderDirection: OrderDirection = Asc, first: Int = 100, skip: Int = 0): PaginatedPointsProgram!
}