
########################################################
# Common Types
########################################################

type BigDecimalDataPoint {
    x: DateTime!
    y: BigDecimal!
}
type BigIntDataPoint {
    x: DateTime!
    y: BigInt!
}
type FloatDataPoint {
    x: DateTime!
    y: Float!
}

enum TimeseriesInterval {
    HOUR
    DAY
    WEEK
    MONTH
    YEAR
}

input TimeseriesOptions {
    endTimestamp: Int
    interval: TimeseriesInterval
    startTimestamp: Int
}

########################################################
# Beefy
########################################################

extend type Beefy {
    historicalState(options: TimeseriesOptions!): BeefyHistory!
}

type BeefyHistory {
    tvlUsd: [FloatDataPoint!]!
}

########################################################
# Chains
########################################################

extend type Chain {
    historicalState(options: TimeseriesOptions!): ChainHistory!
}

type ChainHistory {
    tvlUsd: [FloatDataPoint!]!
}

########################################################
# Tokens
########################################################

extend type TokenNative {
    historicalState(options: TimeseriesOptions!): TokenNativeHistory!
}

type TokenNativeHistory {
    price: [FloatDataPoint!]!
}

extend type TokenErc20 {
    historicalState(options: TimeseriesOptions!): TokenErc20History!
}

type TokenErc20History {
    price: [FloatDataPoint!]!
}


########################################################
# Products
########################################################

extend type ClassicVault {
    historicalState(options: TimeseriesOptions!): ClassicVaultHistory!
}

type ClassicVaultHistory {
    price: [FloatDataPoint!]!
    tvlUsd: [FloatDataPoint!]!
    apy: [FloatDataPoint!]!
}

extend type ClmVault {
    historicalState(options: TimeseriesOptions!): ClmVaultHistory!
}

type ClmVaultHistory {
    price: [FloatDataPoint!]!
    tvlUsd: [FloatDataPoint!]!
    apy: [FloatDataPoint!]!
}

extend type RewardPool {
    historicalState(options: TimeseriesOptions!): RewardPoolHistory!
}

type RewardPoolHistory {
    price: [FloatDataPoint!]!
    tvlUsd: [FloatDataPoint!]!
    apy: [FloatDataPoint!]!
}

extend type LstVault {
    historicalState(options: TimeseriesOptions!): LstVaultHistory!
}

type LstVaultHistory {
    price: [FloatDataPoint!]!
    tvlUsd: [FloatDataPoint!]!
    apy: [FloatDataPoint!]!
}

extend type GovVault {
    historicalState(options: TimeseriesOptions!): GovVaultHistory!
}

type GovVaultHistory {
    price: [FloatDataPoint!]!
    tvlUsd: [FloatDataPoint!]!
    apy: [FloatDataPoint!]!
    buyback: [FloatDataPoint!]!
    totalBuyback: [FloatDataPoint!]!
}
